/* -----------------------------------------------
 *
 * GENERAL LAYOUT STYLES
 *
 *----------------------------------------------- */

/* ClearFix + Grid Clear
/* We're going to auto replicate clearfix on the .grid class because we can safely assume that we will 
 * want to be clearing grids (because all columns elements will be floated) */

.clearfix:before,
.clearfix:after,
.grid:before,
.grid:after{
  content: "\0020";
  display: block;
  height: 0;
  overflow: hidden;
}
.clearfix:after,
.grid:after{
  clear: both;
}
.clearfix,
.grid{
  zoom: 1;
}

.clear{
  clear: both;
}

/* .grid styles
/* These are basic styles for setting up the grid wrapper */

.grid{
  display: block;
  max-width: $grid-max-width;
  margin: auto;
}

/* columns */

/* Generalized selector to hit all of the span-x classes, since the margins and floats will be consistent
   on all of these */
   
[class*="span-"]{
    margin-left: $margins * 100%; 
    margin-right: $margins * 100%; 
    float: left;	
}

@for $i from 1 through $column-number{

  /* For every column span but 1, we also need to determine the total number of margins that the element spans
     This is calculated as the total the number of columns, minus one and then multiplied by 2 */

  $inner-margins: ($i - 1) * 2;
  
  /* Finally, we can determine the actual value that we need to span for each column span.  
     This is calculated by:
        - determining the total number of columns to span 
        - then adding the total number of margins to span */

  $col-width: ($single-col-width * $i) + ($inner-margins * ( $margins * 100 ) );

  /* Now let's actually create the specific unpadded rule for the width */
  .#{$column-name}-#{$i}{
    width: $col-width * 1%;
  }
}